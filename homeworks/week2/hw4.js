function printFactor(n) {
	for(var i=1; i<=n; i++){
		if(n % i === 0){
			console.log(i)
		}
	}
}

printFactor(10);


/*
印出因數

執行流程：
1. 執行第 1 行，定義函式 printFactor()，開始尋找是否有被呼叫
2. 執行第 9 行，呼叫函式 printFactor()，傳入數字 10
3. 執行第 1 行，printFactor()，接收數字 10
4. 執行第 2 行，設定變數 i 為 1，判斷 i 是否小於等於 n: 10，是，開始第一圈迴圈 
5. 執行第 3 行，判斷 n: 10 對 i: 1 取餘數是否等於 0，是，繼續往下 
6. 執行第 4 行，印出 i: 1
7. 第一圈迴圈結束，回到第 2 行，i++ i 變成 2，判斷 i 是否小於等於 n: 10，是，開始第二圈迴圈 
8. 執行第 3 行，判斷 n: 10 對 i: 2 取餘數是否等於 0，是，繼續往下 
9. 執行第 4 行，印出 i: 2
10.第二圈迴圈結束，回到第 2 行，i++ i 變成 3，判斷 i 是否小於等於 n: 10，是，開始第三圈迴圈 
11. 執行第 3 行，判斷 n: 10 對 i: 3 取餘數是否等於 0，不是
12. 第三圈迴圈結束，回到第 2 行，i++ i 變成 4，判斷 i 是否小於等於 n: 10，是，開始第四圈迴圈 
13. 執行第 3 行，判斷 n: 10 對 i: 4 取餘數是否等於 0，不是
14. 第四圈迴圈結束，回到第 2 行，i++ i 變成 5，判斷 i 是否小於等於 n: 10，是，開始第五圈迴圈 
15. 執行第 3 行，判斷 n: 10 對 i: 5 取餘數是否等於 0，是，繼續往下 
16. 執行第 4 行，印出 i: 5
17. 第五圈迴圈結束，回到第 2 行，i++ i 變成 6，判斷 i 是否小於等於 n: 10，是，開始第六圈迴圈
18. 執行第 3 行，判斷 n: 10 對 i: 6 取餘數是否等於 0，不是
19. 第六圈迴圈結束，回到第 2 行，i++ i 變成 7，判斷 i 是否小於等於 n: 10，是，開始第七圈迴圈
20. 執行第 3 行，判斷 n: 10 對 i: 7 取餘數是否等於 0，不是
21. 第七圈迴圈結束，回到第 2 行，i++ i 變成 8，判斷 i 是否小於等於 n: 10，是，開始第八圈迴圈
22. 執行第 3 行，判斷 n: 10 對 i: 8 取餘數是否等於 0，不是
23. 第八圈迴圈結束，回到第 2 行，i++ i 變成 9，判斷 i 是否小於等於 n: 10，是，開始第九圈迴圈
24. 執行第 3 行，判斷 n: 10 對 i: 9 取餘數是否等於 0，不是
25. 第九圈迴圈結束，回到第 2 行，i++ i 變成 10，判斷 i 是否小於等於 n: 10，是，開始第十圈迴圈
26. 執行第 3 行，判斷 n: 10 對 i: 10 取餘數是否等於 0，是，繼續往下 
27. 執行第 4 行，印出 i: 10
28. 第十圈迴圈結束，回到第 2 行，i++ i 變成 11，判斷 i 是否小於等於 n: 10，不是，跳出迴圈
29. 跳出函式 printFactor()
30. 執行結束
*/