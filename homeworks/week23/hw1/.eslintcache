[{"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/component/TodoItems.js":"1","/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/index.js":"2","/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/todo.js":"3","/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/hooks/useTodo.js":"4","/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/store.js":"5","/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/reducers/todos.js":"6","/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/actions.js":"7","/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/actionTypes.js":"8","/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/selectors.js":"9","/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/reducers/filter.js":"10","/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/constants/style.js":"11"},{"size":3149,"mtime":1605015169627,"results":"12","hashOfConfig":"13"},{"size":646,"mtime":1606297363476,"results":"14","hashOfConfig":"13"},{"size":2431,"mtime":1606315333743,"results":"15","hashOfConfig":"13"},{"size":1345,"mtime":1606371091271,"results":"16","hashOfConfig":"13"},{"size":194,"mtime":1606309806638,"results":"17","hashOfConfig":"13"},{"size":1573,"mtime":1606317722219,"results":"18","hashOfConfig":"13"},{"size":764,"mtime":1606319327077,"results":"19","hashOfConfig":"13"},{"size":255,"mtime":1606319264447,"results":"20","hashOfConfig":"13"},{"size":112,"mtime":1606318624024,"results":"21","hashOfConfig":"13"},{"size":320,"mtime":1606319935152,"results":"22","hashOfConfig":"13"},{"size":745,"mtime":1604992733727,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"27"},"1f7x5us",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/component/TodoItems.js",["48"],"import React, { useState } from 'react';\nimport styled from 'styled-components';\nimport GlobalStyle from './../constants/style';\n\nconst TodoItem = styled.li`\n  position: relative;\n  font-size: ${props => props.theme.font_size.text};\n  font-weight: lighter;\n  color: ${props => props.theme.colors.text_primary};\n  letter-spacing: 0.2em;\n  list-style-type: none;\n  text-align: left;\n  margin: 15px;\n  display: flex;\n  align-items: center;\n  border-bottom: 1px solid rgba(0,0,0,0.05);\n  & p {\n    margin: 0;\n    padding: 0.3rem 0;\n  }\n  &:hover {\n    text-shadow: 0 0 0.1px rgba(0,0,0,1);\n    input[type=\"button\"] {\n      display: unset;\n    }\n  }\n`;\n\nconst TodoToggle = styled.input`\n  display: none;\n  & + label {\n    max-width: 460px;\n    overflow: hidden;\n    word-break: break-all;\n    word-wrap: break-word; \n    padding: 0.1em;\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    margin: 0;\n`;\n\nconst Icon = styled.span`\n  min-width: 20px;\n  min-height: 20px;\n  cursor: pointer;\n  filter: opacity(0.3);\n  ${\n    props => props.$isDone ? `\n      background: url(checked.svg) center/cover no-repeat;\n      margin: 7.5px 15px 7.5px 5px;\n    ` : `\n      background: url(unchecked.svg) center/cover no-repeat;\n      margin: 7.5px 15px 7.5px 5px;\n    `\n  }\n`;\n\nconst TodoText = styled.p`\n  ${\n    props => props.$isDone && `\n      text-decoration: line-through;\n    `\n  }\n`;\n\nconst DeleteButton = styled.input`\n  display: none;\n  position: absolute;\n  right: 30px;\n  top: 6px;\n  border: none;\n  outline: none;\n  background: url(delete.svg) center/cover no-repeat;\n  filter: opacity(0.3);\n  width: 20px;\n  height: 20px;\n  cursor: pointer;\n`;\n\nconst TextInput = styled.input`\n  width: 100%;\n  padding: 0.1em;\n  font-size: 18px;\n  font-weight: lighter;\n  letter-spacing: 0.2em;\n  line-height: 1.4em;\n  outline: none;\n`;\n\nconst InputBar = ( { text, handleEnterUpdate } ) => {\n  const [value, setValue] = useState(text);\n  const handleInputChange = e => {\n    setValue(e.target.value)\n  }\n\n  return (\n    <TextInput type=\"text\" \n      value={value} \n      onChange={ handleInputChange } \n      onKeyDown={ e => {\n        if (e.keyCode === 13 && value !== '') {\n          handleEnterUpdate(value)\n        }\n      }}\n    />\n  )\n}\n\nconst TodoItems = ( { key, todo, handleDeleteTodo, handleToggleIsDone, handleUpdateTodo } ) => {\n  const [content, setContent] = useState(todo.content);\n  const handleClickContent = () => {\n    setContent('');\n  }\n  const handleEnterUpdate = value => {\n    handleUpdateTodo(todo.id, value)\n    setContent(value);\n  }\n\n  return (\n    <TodoItem>\n      <TodoToggle  type='checkbox' id={todo.id} />\n      <label for={todo.id}>\n        <Icon  $isDone={todo.isDone} onClick={() => {\n          handleToggleIsDone(todo.id)\n        }}></Icon>\n      </label>\n      <TodoText \n        $isDone={todo.isDone}\n        onClick={handleClickContent}\n      >\n      {\n        content || <InputBar text={todo.content} handleEnterUpdate={handleEnterUpdate} />\n      }\n      </TodoText>\n      <DeleteButton type='button' onClick={() => {\n        handleDeleteTodo(todo.id)\n      }} />\n    </TodoItem>\n  )\n}\n\nexport default TodoItems;",["49","50"],"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/index.js",[],"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/todo.js",[],"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/hooks/useTodo.js",[],"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/store.js",[],"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/reducers/todos.js",[],"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/actions.js",[],"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/actionTypes.js",[],"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/selectors.js",[],"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/redux/reducers/filter.js",[],"/Users/ssuchieh/Desktop/JavaScript/react/redux-hooks-todolist/src/constants/style.js",[],{"ruleId":"51","severity":1,"message":"52","line":3,"column":8,"nodeType":"53","messageId":"54","endLine":3,"endColumn":19},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},"no-unused-vars","'GlobalStyle' is defined but never used.","Identifier","unusedVar","no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-global-assign","no-unsafe-negation"]